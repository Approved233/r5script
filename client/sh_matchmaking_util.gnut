globalize_all_functions


bool function DoesPlaylistSupportNoFillTeams( string playlist )
{
	return GetPlaylistVarBool( playlist, "allow_no_fill_teams", false )
}

bool function DoesPlaylistSupportNoFill( string playlist )
{
	return GetPlaylistVarInt( playlist, "max_nofill_players", 0 ) > 0
}


void function StartMatchmaking_Internal( string playlist, bool requestNoFillTeam )
{
	SetConVarInt( "match_teamNoFill", (requestNoFillTeam ? 1 : 0) )
	StartMatchmaking( playlist )





















	Chroma_StartMatchmaking()
}

void function StartMatchmakingStandard( string playlist )
{
	StartMatchmaking_Internal( playlist, false )
}

void function StartMatchmakingWithNoFillTeams( string playlist )
{
	Assert( DoesPlaylistSupportNoFillTeams( playlist ) )
	StartMatchmaking_Internal( playlist, true )
}



bool function IsMatchmakingFromMatchEnabled()
{
	return GetConVarBool( "matchmake_from_match_enabled" ) && GetCurrentPlaylistVarBool( "matchmake_from_match", false ) && ( GetCurrentPlaylistVarBool( "private_match", false ) == false )
}

bool function IsMatchmakingFromMatchAllowed( entity player )
{
	bool isAllowed = IsMatchmakingFromMatchEnabled()
	isAllowed = isAllowed && !Playlist_ShouldBeHiddenForScheduleBlocks( GetCurrentPlaylistName() )












	return isAllowed
}



































