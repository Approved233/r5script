
global function TempUnlock_IsEnabled
global function TempUnlock_GetActiveEvents
global function TempUnlock_GetLatestActiveEvent
global function TempUnlock_IsCharacterUnlocked
global function TempUnlock_WillCharacterUnlockDuringEvent
global function TempUnlock_GetActiveUnlockedCharacters

const PLAYLIST_KILLSWITCH_VAR = "temp_unlock_flav_enabled"














bool function TempUnlock_IsEnabled()
{
	bool isEnabled = GetCurrentPlaylistVarBool( PLAYLIST_KILLSWITCH_VAR, true )
	return isEnabled
}

array<ItemFlavor> function TempUnlock_GetActiveEvents( int unixTime )
{
	array<ItemFlavor> events
	if ( !TempUnlock_IsEnabled() )
	{
		return events
	}

	
	Assert( IsItemFlavorRegistrationFinished() )
	foreach ( ItemFlavor ev in GetAllItemFlavorsOfType( eItemType.calevent_temp_unlock ) )
	{
		if ( CalEvent_IsActive( ev, unixTime ) )
		{
			events.append( ev )
		}
	}

	
	events.sort( int function( ItemFlavor a, ItemFlavor b ){
		if ( CalEvent_GetStartUnixTime( a ) > CalEvent_GetStartUnixTime( b ) )
			return -1
		else if ( CalEvent_GetStartUnixTime( a ) < CalEvent_GetStartUnixTime( b ) )
			return 1
		return 0
	} )

	return events
}

ItemFlavor ornull function TempUnlock_GetLatestActiveEvent( int unixTime )
{
	array<ItemFlavor> tempUnlockEvents = TempUnlock_GetActiveEvents( GetUnixTimestamp() )
	return tempUnlockEvents.len() > 0 ? tempUnlockEvents[0] : null
}

array<ItemFlavor> function TempUnlock_GetUpcomingEvents( int unixTime )
{
	array<ItemFlavor> events
	if ( !TempUnlock_IsEnabled() )
	{
		return events
	}

	Assert( IsItemFlavorRegistrationFinished() )
	foreach ( ItemFlavor ev in GetAllItemFlavorsOfType( eItemType.calevent_temp_unlock ) )
	{
		if ( !CalEvent_HasStarted( ev, unixTime ) )
		{
			events.append( ev )
		}
	}
	return events
}

bool function TempUnlock_WillCharacterUnlockDuringEvent( ItemFlavor characterFlav, ItemFlavor event )
{
	Assert( ItemFlavor_GetType( characterFlav ) == eItemType.character )

	if ( !CalEvent_IsActive( event, GetUnixTimestamp() ) )
	{
		 return false
	}
	asset wantedCharacterAsset     = ItemFlavor_GetAsset( characterFlav )
	array<ItemFlavor> upcomingEvents = TempUnlock_GetUpcomingEvents( GetUnixTimestamp() )
	foreach ( ItemFlavor tempUnlockEvent in upcomingEvents )
	{
		if ( !CalEvent_HasStarted( tempUnlockEvent, CalEvent_GetFinishUnixTime( event ) ) )
		{
			continue
		}

		asset tempUnlockAsset = ItemFlavor_GetAsset( tempUnlockEvent )
		foreach ( var characterBlock in IterateSettingsAssetArray( tempUnlockAsset, "characters" ) )
		{
			asset characterAsset = GetSettingsBlockAsset( characterBlock, "itemFlavor" )
			if ( characterAsset == wantedCharacterAsset )
			{
				return true
			}
		}
	}
	return false
}

bool function TempUnlock_IsCharacterUnlocked( ItemFlavor characterFlav )
{
	Assert( ItemFlavor_GetType( characterFlav ) == eItemType.character )

	
	asset wantedCharacterAsset     = ItemFlavor_GetAsset( characterFlav )
	array<ItemFlavor> activeEvents = TempUnlock_GetActiveEvents( GetUnixTimestamp() )
	foreach ( ItemFlavor tempUnlockEvent in activeEvents )
	{
		asset tempUnlockAsset = ItemFlavor_GetAsset( tempUnlockEvent )
		foreach ( var characterBlock in IterateSettingsAssetArray( tempUnlockAsset, "characters" ) )
		{
			asset characterAsset = GetSettingsBlockAsset( characterBlock, "itemFlavor" )
			if ( characterAsset == wantedCharacterAsset )
			{
				return true
			}
		}
	}

	return false
}

array<ItemFlavor> function TempUnlock_GetActiveUnlockedCharacters( ItemFlavor tempUnlockEvent )
{
	Assert( ItemFlavor_GetType( tempUnlockEvent ) == 	eItemType.calevent_temp_unlock )
	asset tempUnlockAsset = ItemFlavor_GetAsset( tempUnlockEvent )
	array<ItemFlavor> characters = []
	foreach ( var characterBlock in IterateSettingsAssetArray( tempUnlockAsset, "characters" ) )
	{
		asset characterAsset = GetSettingsBlockAsset( characterBlock, "itemFlavor" )
		characters.append( GetItemFlavorByAsset( characterAsset) )
	}

	return characters
}