global function Perk_RingExpert_Init
global function Perk_RingExpert_IsEnabled







global const string RING_EXPERT_END_SIGNAL = "ring_expert_end"
const string RING_DIRECTION_CREATED_SIGNAL = "ring_direction_created"
const string RING_DIRECTION_SCRIPT_NAME = "ring_direction"
const string OVERSHIELD_FULLY_DRAINED = "Controller_Overcharge_Empty_1p"
const asset DAMAGE_MITIGATION_1P_SCREEN_FX = $"P_clbr_ulti_screen_colored"
const asset DAMAGE_MITIGATION_FLASH_FX = $"P_cPerks_con_shield_up"
const asset DAMAGE_MITIGATION_END_FX = $"P_cPerks_con_shield_down"
const string OVERSHIELD_START_SOUND = "Controller_Zone_Enter_1p"
const string OVERSHIELD_END_SOUND = "Controller_Zone_Exit_1p"
const string OVERSHIELD_FULLY_CHARGED = "Controller_Overcharge_Full_1p"

const asset RING_RADIUS_FX = $"P_ar_edge_ring_gen"
const vector RING_RADIUS_COLOR = <60, 110, 300>
const float AR_EFFECT_SIZE = 768.0 

int COCKPIT_DAMAGE_MITIGATION_SCREEN_FX
int DAMAMGE_MITIGATION_START_FX
int DAMAMGE_MITIGATION_END_FX

struct {














}file

struct {
	float evoTickRate = 1
	float nextRingDirScanWidth = 3000
	int zoneEnterShieldRegen = 25
	float nextZoneMonitorTime = 60
	bool nextZoneMonitorEnemyPresence = false
	bool displayNextRingCompass = false
	float shieldDecayTickRate = .1
	float shieldDecayDelay = 5.0
	float shieldChargeTickRate = .1
	float regenCooldown = 0
	bool rechargeOnRingEnterWhenFull = true
}tunings

void function Perk_RingExpert_Init()
{
	PerkInfo ringExpert




	ringExpert.perkId          = ePerkIndex.RING_EXPERT
	Perks_RegisterClassPerk( ringExpert )







	RegisterSignal( "Perk_StructureDamageMitigation_StatusStarted" )
	RegisterSignal( "Perk_StructureDamageMitigation_StatusEnded" )

	if( !Perk_RingExpert_IsEnabled() )
		return














}

void function Perk_RingExpert_InitTunings()
{
	tunings.evoTickRate = GetCurrentPlaylistVarFloat( "perk_ring_expert_evo_tick_rate", tunings.evoTickRate )
	tunings.zoneEnterShieldRegen = GetCurrentPlaylistVarInt( "perk_ring_expert_zone_enter_shield_regen", tunings.zoneEnterShieldRegen )
	tunings.nextZoneMonitorEnemyPresence = GetCurrentPlaylistVarBool( "perk_ring_expert_next_zone_monitor_enemy_presence", tunings.nextZoneMonitorEnemyPresence )
	tunings.nextRingDirScanWidth = GetCurrentPlaylistVarFloat( "perk_ring_expert_next_ring_dir_scan_width", tunings.nextRingDirScanWidth )
	tunings.nextZoneMonitorTime = GetCurrentPlaylistVarFloat( "perk_ring_expert_next_ring_dir_monitor_time", tunings.nextZoneMonitorTime )
	tunings.shieldDecayTickRate = GetCurrentPlaylistVarFloat( "perk_overshield_decay_tick_rate", tunings.shieldDecayTickRate )
	tunings.shieldChargeTickRate = GetCurrentPlaylistVarFloat( "perk_overshield_charge_tick_rate", tunings.shieldChargeTickRate )
	tunings.shieldDecayDelay = GetCurrentPlaylistVarFloat( "perk_overshield_decay_delay", tunings.shieldDecayDelay )
	tunings.regenCooldown = GetCurrentPlaylistVarFloat( "perk_overshield_charge_cooldown", tunings.regenCooldown )
	tunings.rechargeOnRingEnterWhenFull = GetCurrentPlaylistVarBool( "perk_overshield_charge_when_full", tunings.rechargeOnRingEnterWhenFull )
}

bool function Perk_RingExpert_IsEnabled()
{
	return Perks_S22UpdateEnabled() && GetCurrentPlaylistVarBool( "perk_ring_expert_is_enabled", true )
}








































































































































































































































































































































































































































































































































































































