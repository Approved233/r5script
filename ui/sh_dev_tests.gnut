#if DEV











global function test_init
global function test_itemflavorsdump












































const string DEBUG_OUTPUT_PATH = "../../dumps/" 

const float MIN_EXECUTION_DURATION = 4.9
const float MAX_EXECUTION_DURATION = 6.0
const float MAX_EXECUTION_DISPLACEMENT = 90 




void function test_init()
{








	RegisterSignal("tooManyMoverTestEnd")
	RegisterSignal("ExecutionTestTriggered")
	RegisterSignal("ExecutionTestEnded")
}

void function test_itemflavorsdump( string filter )
{
	array<ItemFlavor> itemFlavorList = DEV_GetAllItemFlavors()
	string vm = IsServer() ? "server" : IsUI() ? "ui" : "client"
	string filename =  "itemflavorsdump_" + vm + ".txt"
	string fullPathAndName = DEBUG_OUTPUT_PATH + filename
	string gameVersion = GetGameVersion()

	DevTextBufferClear()
	DevTextBufferWrite(  gameVersion + "\n" )
	string modFilter = filter.tolower()
	int count = 0
	foreach( item in itemFlavorList )
	{
		int index = DEV_ItemFlavor_GetCleanedAssetPath( item ).find( modFilter, 0 )
		if ( index >= 0 )
		{
			string line = "hrf: " + DEV_ItemFlavor_GetCleanedAssetPath( item ) + "\n"
			printt( line )
			DevTextBufferWrite( line )
			++count
		}
	}

	bool success = DevTextBufferDumpToFile( fullPathAndName )
	if ( success )
		printt( "Wrote " + count + " entries to '" + fullPathAndName + "'." )
	else
		printt( "Failed to write " + count + " entries to '" + fullPathAndName + "'.  This directory must pre-exist.")
}





















































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































#endif
