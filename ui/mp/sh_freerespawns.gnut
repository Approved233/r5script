

global function FreeRespawns_Feature_Exists

global function Freespawns_PLV_LockoutTime_Progress_PastDisable

global function Freespawns_PLV_AggroRewards_DamageChunk_Threshold
global function Freespawns_AggroReward_Get_ByType

global function Freespawns_PLV_RebuildWeaponSlots


const asset RESPAWN_DEATHLOC_BEACON_ASSET = $"P_ar_loot_drop_point_far_cp"
const asset RESPAWN_DEATHLOC_ICON_ASSET		  = $"rui/rui_screens/icon_skull_postdeath"
const float RESPAWN_DEATHLOC_SHOW_DURATION = 60.0

const string LOCKOUT_TIMES_DEFAULTS 		= "10 20 30 40 50 60"
const string LOCKOUT_DEATHADDS_DEFAULTS 	= "05 10 15 15 15 15"

const asset 	RESPAWN_PLAYERWILLRESPAWN_VFX = $"P_dummie_warp_default"
const string 	RESPAWN_PLAYERWILLRESPAWN_SFX = "Dummie_WarpOut_3P"

const float LOCKOUTTIME_MAX = 255.0


const int TEAM_ALL = -1
const int DEFAULT_LIMIT_ENDROUNDEND 	= 4
const int DEFAULT_LIMIT_SQUADSREMAINING = -1 

const float FREESPAWN_ENEMY_WARN_RANGE = 100 * METERS_TO_INCHES

const asset		DESTINATIONMARKER_FX = $"P_ar_FS_landingmark" 
const float 	FREESPAWNS_LANDINGMARKER_SPECTATE_TIME = 4.0

const string 	FREESPAWN_SOUND_3P_LANDINGMARKER_ALLY 	= "Survival_Freespawn_Landing_Marker_3P"
const string 	FREESPAWN_SOUND_3P_LANDINGMARKER_ENEMY 	= "PvE_RespawnChime_3P"
const string	FREESPAWN_SOUND_1P_ELIMINATED_A_SQUAD		= "UI_3Strikes_EnemySquadEliminated" 


const string	FREESPAWN_SOUND_1P_ALLYRESPAWNED			= "Survival_Freespawn_Friendly_1P"					
const string 	FREESPAWN_SOUND_1P_ENEMYNEARBY				= "Survival_Freespawn_Nearby_Enemy_1P"				
const string 	FREESPAWN_SOUND_1P_RESPAWNCOUNTDOWN			= "Survival_Freespawn_TokenCountdown_1P"			
const string	FREESPAWN_SOUND_1P_USETOKEN					= "Survival_Freespawn_TokenUse_1P"					
const string	FREESPAWN_SOUND_1P_LAUNCHRESTORE			= "Survival_Freespawn_LaunchRestore_1P"				

const string	FREESPAWN_SOUND_PLAYER_KILLED_WILL_RESPAWN  = "Survival_Freespawn_Pilot_Killed_Indicator_1P"	
const string	FREESPAWN_SOUND_FREESPAWNS_DISABLED			= "Survival_Gameplay_Revival_Finish"				
const string 	FREESPAWN_SOUND_AGGROREWARD					= "Survival_Freespawn_TokenCountdownUpdate_1P"

const string 	FREESPAWN_VO_RESPAWN_START					= "bc_podLeaderLaunch"
const string 	FREESPAWN_VO_RESPAWN_LANDED					= "bc_respawnAuto"
const float		SQUAD_SURVIVOR_WARNING_DEBOUNCE_TIME			= 10.0
const string	SQUAD_SURVIVOR_SOUND_ANNOUNCE				= "Survival_Freespawn_TokenCountdownUpdate_1P" 













struct sObserverTarget
{
	entity targetObj
	int mode = OBS_MODE_CHASE
	float duration
}

struct sFreespawnedLoadout_DegradedWeapon
{
	string ref
	array< string > mods
}


const string SKYDIVE_SPAWN_WARN_SOUND = "PvE_RespawnChime_3P"

struct sDestPoint
{
	Point pt
	bool isValid = false
}


global const vector 	FREESPAWN_PROMPT_COLOR	= < 128.0, 128.0, 128.0 > / 255.0
global const vector 	FREESPAWN_AGRROREWARD_COLOR	= < 0.0, 255.0, 0.0 > / 255.0
global const vector		FREESPAWN_AGGROREWARD_PENALTY_COLOR = < 255.0, 0.0, 0.0 > / 255.0
global const float 		FREESPAWN_DELAY = 30.0

global function Freespawns_PLV_AutoActivate

global function Freespawns_RespawnBeacons_Disabled

global function Freespawns_PLV_RestoreAttachments_OnFreespawn
global function Freespawns_RestorableAttachments_GetTypes

const int FREESPAWNSV3_SELFREVIVES_MAX = 1
const string HIGHLIGHT_ENEMYTEAMMATES = "bloodhound_sonar"

























global function FreeRespawns_CanLocalPlayerRespawn
global function FreeRespawns_CanLocalPlayerRespawnOrIsRespawning
global function FreeRespawns_SetCanLocalPlayerRespawn


















































































































































const vector INVALID_LOC = < 0,0,0 >

struct
{
	bool devPrintsOn = false























































		int squadLives = 0
		int squadLivesViewPlayer = 0
		int lastSquadLifeAnnouncement = -1
		bool soloSplashAnnounceDisplayed = false
		bool localPlayerCanRespawn = false
		bool localPlayerCanRespawnOrIsRespawning = false















} file
























































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































bool function FreeRespawns_Feature_Exists()
{
	return( GetCurrentPlaylistVarBool( "freerespawns_feature_exists", false ) )
}


string function FreeRespawns_PLV_Type()
{
	
	
	

	return( GetCurrentPlaylistVarString( "freerespawns_type", "ondemand" ) )
}



bool function FreeRespawns_PLV_DropshipSkyDive_HasJumpMaster()
{
	return( GetCurrentPlaylistVarBool( "freerespawns_dropshipskydive_hasjumpmaster", true ) )
}

bool function FreeRespawns_PLV_GiveReward_OnDisable()
{
	return( GetCurrentPlaylistVarBool( "freerespawns_givereward_ondisable", false ) )
}




int function FreeRespawns_PLV_Limit_SquadsRemaining()
{
	return( GetCurrentPlaylistVarInt( "freerespawns_limit_squadsremaining", DEFAULT_LIMIT_SQUADSREMAINING ) )
}

int function FreeRespawns_PLV_SquadLivesMax()
{
	return( GetCurrentPlaylistVarInt( "freerespawns_squadlivesmax", 1 ) )
}

int function LivesToStrikes( int lives )
{
	
	const int MAX_STRIKES = 3

	int strikes = minint( MAX_STRIKES - lives - 1, 3 )
	return maxint( strikes, 0 )
}


bool function FreeRespawns_PLV_DontResetInventory_OnFreespawn()
{
	return( GetCurrentPlaylistVarBool( "freerespawns_dontresetinventory_onfreespawn", true ) )
}




int function Freespawns_PLV_EndRound_OnClose()
{
	return( GetCurrentPlaylistVarInt( "freespawns_endround_onclose", 4 ) ) 
}


bool function Freespawns_PLV_AutoActivate()
{
	return( GetCurrentPlaylistVarBool( "freespawns_autoactivate", true ) ) 
}


bool function Freespawns_PLV_RestoreAttachments_OnFreespawn()
{
	return( GetCurrentPlaylistVarBool( "freespawns_restoreattachments", true ) ) 
}




string function Freespawns_PLV_RestorableAttachments()
{
	return( GetCurrentPlaylistVarString( "freespawns_restorableattachments", "barrel bolt hopup laser mag optic stock" ) ) 
}

array< string > function Freespawns_RestorableAttachments_GetTypes()
{
	string plv = Freespawns_PLV_RestorableAttachments()
	array< string > results = GetTrimmedSplitString( plv, " " )
	return results
}


bool function Freespawns_PLV_RebuildWeaponSlots()
{
	return( GetCurrentPlaylistVarBool( "freespawns_rebuildweaponslots", true ) ) 
}


bool function FreespawnLoadout_PLV_DegradeAttachments()
{
	return( GetCurrentPlaylistVarBool( "freespawnloadout_degradegoldattachments", true ) )
}

bool function FreespawnLoadout_PLV_DegradeAttachments_SuicidesOnly()
{
	return( GetCurrentPlaylistVarBool( "freespawnsloadout_degradegoldattachments_suicidesonly", true ) )
}

































int function EndFreespawn_NoDeath_Reward_XP()
{
	return( GetCurrentPlaylistVarInt( "freeRespawn_nodeathrewardxp", 1000 ) )
}
















































































































































































































































































































































































































































































































































































































































































































































bool function FreeRespawns_CanLocalPlayerRespawn()
{
	if ( !IsValid( GetLocalClientPlayer() ) )
	{
		return false
	}

	return file.localPlayerCanRespawn
}

bool function FreeRespawns_CanLocalPlayerRespawnOrIsRespawning()
{
	if ( !IsValid( GetLocalClientPlayer() ) )
	{
		return false
	}

	return file.localPlayerCanRespawnOrIsRespawning
}

void function FreeRespawns_SetCanLocalPlayerRespawn(bool localPlayerCanRespawnOrIsRespawning = false, bool localPlayerCanRespawn = false)
{
	file.localPlayerCanRespawnOrIsRespawning = localPlayerCanRespawnOrIsRespawning
	file.localPlayerCanRespawn = localPlayerCanRespawn
}






























































































bool function Lockout_PLV_IntroTunings_Enabled()
{
	
	return( GetCurrentPlaylistVarBool( "freespawns_lockout_introtunings_enabled", true ) )
}

int function Lockout_PLV_IntroTunings_Round()
{
	
	return( GetCurrentPlaylistVarInt( "freespawns_lockout_introtunings_round", 1 ) )
}

float function Lockout_PLV_IntroTunings_LockoutTime()
{
	return( GetCurrentPlaylistVarFloat( "freespawns_lockout_introtunings_lockouttime", 5.0 ) )
}

float function Lockout_PLV_IntroTunings_DeathAdd()
{
	return( GetCurrentPlaylistVarFloat( "freespawns_lockout_introtunings_deathadd", 5.0 ) )
}

bool function Lockout_IntroTunings_ActiveCheck()
{
	if( !Lockout_PLV_IntroTunings_Enabled() )
		return false

	bool result = GetGlobalNetBool( "Freespawns_Lockout_IntroTuning_Active" )

#if DEV
		printt( FUNC_NAME() + "(): Freespawns_Lockout_IntroTuning_Active == " + result )
#endif

	return result
}























bool function Lockout_PLV_HyperTunings_Enabled()
{
	
	return( GetCurrentPlaylistVarBool( "freespawns_lockout_hypertunings_enabled", false ) )
}

int function Lockout_PLV_HyperTunings_StartAt_EndofRound()
{
	
	return( GetCurrentPlaylistVarInt( "freespawns_lockout_hypertunings_startat_endofround", 4 ) )
}

float function Lockout_PLV_HyperTunings_LockoutTime()
{
	return( GetCurrentPlaylistVarFloat( "freespawns_lockout_hypertunings_lockouttime", 60.0 ) )
}

float function Lockout_PLV_HyperTunings_DeathAdd()
{
	return( GetCurrentPlaylistVarFloat( "freespawns_lockout_hypertunings_deathadd", 30.0 ) )
}

float function Lockout_PLV_HyperTunings_AggroRewardMod()
{
	return( GetCurrentPlaylistVarFloat( "freespawns_lockout_hypertunings_aggrorewardmod", 2.0 ) )
}

bool function Lockout_HyperTunings_ActiveCheck()
{
	if( !Lockout_PLV_HyperTunings_Enabled() )
		return false

	bool result = GetGlobalNetBool( "Freespawns_Lockout_HyperTuning_Active" )

#if DEV
		printt( FUNC_NAME() + "(): Freespawns_Lockout_HyperTuning_Active == " + result )
#endif

	return result
}





















string function Lockout_PLV_LockoutTimeMins_ByRound()
{
	return( GetCurrentPlaylistVarString( "freespawns_lockouttimes_byround", 		LOCKOUT_TIMES_DEFAULTS ) ) 
}
string function Lockout_PLV_DeathAdds_ByRound()
{
	return( GetCurrentPlaylistVarString( "freespawns_lockoutdeathadds_byround", 	LOCKOUT_DEATHADDS_DEFAULTS ) )
}

bool function Freespawns_PLV_LockoutTime_Progress_PastDisable()
{
	return( GetCurrentPlaylistVarBool( "freespawns_lockouttime_progress_pastdisable", true ) ) 
}









































































































































bool function AggroRewards_PLV_Enabled()
{
	return( GetCurrentPlaylistVarBool( "freespawns_aggrorewards_enabled", true ) ) 
}

bool function AggroRewards_PLV_CanGive_DamageChunk()
{
	return( GetCurrentPlaylistVarBool( "freespawns_aggrorewards_CanGive_damagechunk", true ) ) 
}

bool function AggroRewards_PLV_CanGive_DownedEnemy()
{
	return( GetCurrentPlaylistVarBool( "freespawns_aggrorewards_CanGive_downedenemy", true ) ) 
}

bool function AggroRewards_PLV_CanGive_KilledEnemy()
{
	return( GetCurrentPlaylistVarBool( "freespawns_aggrorewards_CanGive_killedenemy", true ) ) 
}

bool function AggroRewards_PLV_CanGive_ExecutedEnemy()
{
	return( GetCurrentPlaylistVarBool( "freespawns_aggrorewards_CanGive_executedenemy", true ) ) 
}

bool function AggroRewards_PLV_CanGive_Penalty_AllyDeath()
{
	return( GetCurrentPlaylistVarBool( "freespawns_aggrorewards_CanGive_penalty_allydeath", false ) ) 
}

int function Freespawns_PLV_AggroRewards_DamageChunk_Threshold()
{
	return( GetCurrentPlaylistVarInt( "freespawns_aggrorewards_damagechunk_threshold", 300  ) ) 
}

float function AggroRewards_PLV_DamageChunk()
{
	return( GetCurrentPlaylistVarFloat( "freespawns_aggrorewards_damagechunk", -5.0  ) ) 
}

float function AggroRewards_PLV_DownedEnemy()
{
	return( GetCurrentPlaylistVarFloat( "freespawns_aggrorewards_downedenemy", -5.0  ) ) 
}

float function AggroRewards_PLV_KilledEnemy()
{
	return( GetCurrentPlaylistVarFloat( "freespawns_aggrorewards_killedenemy", -10  ) ) 
}

float function AggroRewards_PLV_ExecutedEnemy()
{
	return( GetCurrentPlaylistVarFloat( "freespawns_aggrorewards_executedenemy", -15  ) ) 
}

bool function AggroRewards_ShouldGive()
{
	bool freespawnsEnabled = true 




	bool freespawnsV3_AggroRewards_Enabled = AggroRewards_PLV_Enabled()
	return( freespawnsEnabled && freespawnsV3_AggroRewards_Enabled  )
}

float function Freespawns_AggroReward_Get_ByType( int aggroRewardType )
{
	if( !AggroRewards_ShouldGive() )
		return 0

	float result
	switch( aggroRewardType )
	{
		case eFreespawns_AggroType.DAMAGE_CHUNK:
			result = AggroRewards_PLV_DamageChunk()
			break
		case eFreespawns_AggroType.DOWNED_ENEMY:
			result = AggroRewards_PLV_DownedEnemy()
			break
		case eFreespawns_AggroType.KILLED_ENEMY:
			result = AggroRewards_PLV_KilledEnemy()
			break
		case eFreespawns_AggroType.EXECUTED_ENEMY:
			result = AggroRewards_PLV_ExecutedEnemy()
			break
		case eFreespawns_AggroType.PENALTY_ALLYDEATH:
			result = LockoutTimeSynced_PLV_AllyDeathPenalty()
			break
		default:
			result = 0
			break
	}

	if( Lockout_HyperTunings_ActiveCheck() )
	{
		float rewardMod = Lockout_PLV_HyperTunings_AggroRewardMod()
		result = result * rewardMod
	}

	return( result )
}


























































































































































































































































































































bool function LockoutDeathAdds_PLV_Enabled()
{
	return( GetCurrentPlaylistVarBool( "freespawns_lockoutdeathadds_enabled", true ) ) 
}








































































bool function LockoutTimeSynced_PLV_Enabled()
{
	return( GetCurrentPlaylistVarBool( "freespawns_lockouttime_synced_enabled", true ) ) 
}

float function LockoutTimeSynced_PLV_AllyDeathPenalty()
{
	return( GetCurrentPlaylistVarFloat( "freespawns_lockouttime_synced_allydeathpenalty", 0.0 ) ) 
}
























































































































































float function Freespawns_PLV_SpawnNear_Radius()
{
	return( GetCurrentPlaylistVarFloat( "freespawns_spawnnear_radius", 5.0 ) )
}

bool function Freespawns_PLV_Show_RespawnStatus_OnRespawn()
{
	return( GetCurrentPlaylistVarBool( "freespawns_showrespawnstatus_onrespawn", true ) ) 
}

bool function Freespawns_PLV_Show_RespawnStatus_OnDeath_WillSpawn()
{
	return( GetCurrentPlaylistVarBool( "freespawns_showrespawnstatus_ondeath_willrespawn", false ) ) 
}

bool function Freespawns_PLV_Show_Survivor_AggroHint()
{
	return( GetCurrentPlaylistVarBool( "freespawns_show_survivor_aggrohint", true ) )
}

bool function Freespawns_PLV_Show_RespawnStatus_OnDeath_Eliminated()
{
	return( GetCurrentPlaylistVarBool( "freespawns_showrespawnstatus_ondeath_eliminated", true ) ) 
}



float function DropshipGroupSpawn_PLV_Height()
{
	return( GetCurrentPlaylistVarFloat( "freespawns_dropshipgroupspawn_height", 300 )) 
}


float function DropshipGroupSpawn_PLV_Traffic_HeightMod()
{
	return( GetCurrentPlaylistVarFloat( "freespawns_dropshipgroupspawn_traffic_heightmod", 10 )) 
}

float function DropshipGroupSpawn_PLV_Traffic_AirspaceRadius()
{
	return( GetCurrentPlaylistVarFloat( "freespawns_dropshipgroupspawn_traffic_airspaceradius", 150 )) 
}

float function DropshipGroupSpawn_PLV_DiveRadius()
{
	return( GetCurrentPlaylistVarFloat( "freespawns_dropshipgroupspawn_diveradius", 250 )) 
}

bool function DropshipGroupSpawn_PLV_DropFacingRingCenter()
{
	return( GetCurrentPlaylistVarBool( "freespawns_dropshipgroupspawn_dropfacingringcenter", true ) )
}
































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































bool function Freespawns_PLV_SkipBleedout_Allow()

{
	return( GetCurrentPlaylistVarBool( "freespawns_skipbleedout_allow", false ) ) 
}

bool function Freespawns_PLV_DeathFX_WillRespawn_Show()
{
	return( GetCurrentPlaylistVarBool( "freespawns_deathfx_willrespawn_show", false ) ) 
}

float function Freespawns_PLV_SkipBleedout_DelayTime_Base()
{
	return( GetCurrentPlaylistVarFloat( "freespawns_skipbleedout_delaytime_base", 10.0 ) ) 
}





















































































































































































































































































































































































































































bool function SelfRevives_PLV_Enabled()
{
	return( GetCurrentPlaylistVarBool( "freespawns_selfrevives_enabled", false ) ) 
}

bool function SelfRevives_PLV_Allowed_AfterFreespawnDisable()
{
	return( GetCurrentPlaylistVarBool( "freespawns_selfrevives_allowed_afterfreespawndisable", true ) ) 
}

int function SelfRevives_PLV_MaxCount()
{
	return( GetCurrentPlaylistVarInt( "freespawns_selfrevives_maxcount", FREESPAWNSV3_SELFREVIVES_MAX ) ) 
}
















































































































































































































bool function Freespawns_PLV_RespawnBeacons_Disabled()
{
	return( GetCurrentPlaylistVarBool( "freespawns_respawnbeacons_disabled", true ) ) 
}

bool function Freespawns_RespawnBeacons_Disabled()
{
	bool featureExists 	= FreeRespawns_Feature_Exists()
	bool respawnBeacons_Disabled = Freespawns_PLV_RespawnBeacons_Disabled()
	return( featureExists && respawnBeacons_Disabled )
}


bool function Freespawns_PLV_RespawnMapIcons_Enabled()
{
	return( GetCurrentPlaylistVarBool( "freespawns_respawnmapicons_enabled", true ) )
}















































































































float function TimeLeft( float timeTotal, float timeStart )
{
	float frac

		frac = 1 - ( ClientTime() - timeStart ) / timeTotal




	frac = max( 0, frac )

	float timeLeft = timeTotal * frac
	return( timeLeft )
}

                          