

















#if DEV
global function DEV_LobbyStageSwitching_FoceEvent
#endif






































































































































































































































struct
{

		int  activePresentationType = ePresentationType.INACTIVE





























































































































































































	array<void functionref()> mouseWheelDownCallbacks
	array<void functionref()> mouseWheelUpCallbacks






#if DEV
	int DEV_forceLobbyEvent = -1
#endif
} file















































































const STICK_ROTATE_SPEED = 2.0 


const MOUSE_ROTATE_SPEED = 1.0 

global function ShMenuModels_UIInit

global function RunMenuClientFunction
global function UI_SetPresentationType
global function UI_GetPresentationType

global function UICodeCallback_MouseMovementCapture
global function OnMouseWheelDown
global function OnMouseWheelUp

global function ClientToUI_PROTO_UpdateClientWithLocalClientUID

global function TrackIsOverScrollBar
global function ClientToUI_CheckPlaylist








global function AddCallback_OnMouseWheelDown
global function AddCallback_OnMouseWheelUp
global function RemoveCallback_OnMouseWheelDown
global function RemoveCallback_OnMouseWheelUp
global function IsCallbackRegistered_OnMouseWheelDown
global function IsCallbackRegistered_OnMouseWheelUp
global function IsPlayPresentationType









void function ShMenuModels_UIInit()
{
	RegisterButtonPressedCallback( MOUSE_WHEEL_DOWN, OnMouseWheelDown )
	RegisterButtonPressedCallback( MOUSE_WHEEL_UP, OnMouseWheelUp )

	AddCallback_LobbyPlaylist_OnSelectedPlaylistChanged( LobbyStageSwitching_Callback_SelectedPlaylistChanged )
}






































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































void function RunMenuClientFunction( string func, var arg1 = null, var arg2 = null, var arg3 = null )
{
	if ( !CanRunClientScript() )
		return

	if ( arg1 == null )
		RunClientScript( func, GetLocalClientPlayer() )
	else if ( arg2 == null )
		RunClientScript( func, GetLocalClientPlayer(), arg1 )
	else if ( arg3 == null )
		RunClientScript( func, GetLocalClientPlayer(), arg1, arg2 )
	else
		RunClientScript( func, GetLocalClientPlayer(), arg1, arg2, arg3 )
}

void function UI_SetPresentationType( int newPresentationType, bool interpolate = false )
{
	if ( !IsFullyConnected() )
		return

	RunClientScript( "SetPresentationType", GetLocalClientPlayer(), newPresentationType, interpolate )

	file.activePresentationType = newPresentationType

	if ( IsPlayPresentationType( newPresentationType ) )
		RunClientScript( "UpdateMenuWithPartyMembers" )
}

int function UI_GetPresentationType()
{
	return file.activePresentationType
}

void function UICodeCallback_MouseMovementCapture( var capturePanel, int deltaX, int deltaY )
{
	float screenScaleXModifier = 1920.0 / GetScreenSize().width 
	float mouseXRotateDelta    = deltaX * screenScaleXModifier * MOUSE_ROTATE_SPEED
	

	float screenScaleYModifier = 1080.0 / GetScreenSize().height 
	float mouseYRotationDelta  = deltaY * screenScaleYModifier * MOUSE_ROTATE_SPEED

	RunMenuClientFunction( "UpdateMouseRotateDelta", mouseXRotateDelta, mouseYRotationDelta )
}

void function TrackIsOverScrollBar( var listPanel )
{
	EndSignal( uiGlobal.signalDummy, "TrackIsOverScrollBar" )

	var scrollPanel      = Hud_GetChild( listPanel, "ScrollPanel" )
	bool rotationEnabled = true

	while ( true )
	{
		var focus       = GetFocus()
		var focusParent = focus == null ? null : Hud_GetParent( focus )
		bool isOverList = focus == listPanel || focusParent == listPanel || focusParent == scrollPanel

		if ( rotationEnabled && isOverList )
		{
			rotationEnabled = false
			RunClientScript( "DisableModelTurn" )
		}
		else if ( !rotationEnabled && !isOverList )
		{
			rotationEnabled = true
			RunClientScript( "EnableModelTurn" )
		}

		WaitFrame()
	}
}




























void function ClientToUI_PROTO_UpdateClientWithLocalClientUID()
{
	RunClientScript( "UIToClient_PROTO_UpdateClientWithLocalClientUID", GetPlayerUID() )
}















































































































































































































































































































































































void function OnMouseWheelDown( var unused )
{
	foreach ( void functionref() cb in file.mouseWheelDownCallbacks )
		cb()

	if ( CanRunClientScript() )
		RunClientScript( "ShMenuModels_ClientToUI_OnMouseWheel", true )
}


void function OnMouseWheelUp( var unused )
{
	foreach ( void functionref() cb in file.mouseWheelUpCallbacks )
		cb()

	if ( CanRunClientScript() )
		RunClientScript( "ShMenuModels_ClientToUI_OnMouseWheel", false )
}













void function AddCallback_OnMouseWheelDown( void functionref() cb )
{
	Assert( !file.mouseWheelDownCallbacks.contains( cb ) )
	file.mouseWheelDownCallbacks.append( cb )
}
void function RemoveCallback_OnMouseWheelDown( void functionref() cb )
{
	Assert( file.mouseWheelDownCallbacks.contains( cb ) )
	file.mouseWheelDownCallbacks.removebyvalue( cb )
}
void function AddCallback_OnMouseWheelUp( void functionref() cb )
{
	Assert( !file.mouseWheelUpCallbacks.contains( cb ) )
	file.mouseWheelUpCallbacks.append( cb )
}
void function RemoveCallback_OnMouseWheelUp( void functionref() cb )
{
	Assert( file.mouseWheelUpCallbacks.contains( cb ) )
	file.mouseWheelUpCallbacks.removebyvalue( cb )
}

bool function IsCallbackRegistered_OnMouseWheelUp( void functionref() cb )
{
	return file.mouseWheelUpCallbacks.contains( cb )
}

bool function IsCallbackRegistered_OnMouseWheelDown( void functionref() cb )
{
	return file.mouseWheelDownCallbacks.contains( cb )
}

bool function IsPlayPresentationType( int presentationType )
{
	return presentationType == ePresentationType.PLAY
		|| presentationType == ePresentationType.PLAY_QUADS
		|| presentationType == ePresentationType.PLAY_STAGE_B_TRIOS
		|| presentationType == ePresentationType.PLAY_STAGE_B_QUADS
		|| presentationType == ePresentationType.PLAY_STAGE_C_TRIOS
		|| presentationType == ePresentationType.PLAY_STAGE_C_QUADS
}


















void function LobbyStageSwitching_Callback_SelectedPlaylistChanged( string playlistName )
{
	UpdateLobbyButtons()

	if ( CanRunClientScript() )
		RunClientScript( "LobbyStageSwitching_UpdateLobbyStage", playlistName )
}

void function ClientToUI_CheckPlaylist()
{
	if ( CanRunClientScript() )
		RunClientScript( "LobbyStageSwitching_UpdateLobbyStage", LobbyPlaylist_GetSelectedPlaylist() )
}


bool function IsLobbyEvent1Active()
{
#if DEV
		if ( file.DEV_forceLobbyEvent != -1 )
			return file.DEV_forceLobbyEvent == 1
#endif

	return IsMTXEventActive( "MTX_Event_1" )
}

bool function IsLobbyEvent2Active()
{
#if DEV
		if ( file.DEV_forceLobbyEvent != -1 )
			return file.DEV_forceLobbyEvent == 2
#endif

	return IsMTXEventActive( "MTX_Event_2" )
}

#if DEV
void function DEV_LobbyStageSwitching_FoceEvent( int newEvent )
{
	file.DEV_forceLobbyEvent = newEvent



	ClientToUI_CheckPlaylist()

}
#endif















































































































































































































































































